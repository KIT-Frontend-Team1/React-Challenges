6. useEffect
- 컴포넌트가 렌더링될 때마다 실행되는 hook 함수이다. 구성 요소를 외부 시스템과 동기화할 수 있다. 예를 들어 API 호출, 데이터 가져오기, DOM 조작 등은 리액트 함수형 컴포넌트 바깥에 위치하는데 useEffect를 사용하면 함수형 컴포넌트 내부에서도 수행할 수 있다.

언제 사용하는가? 
Mount (화면에 첫 렌더링) -> Update (다시 렌더링) -> Unmount (화면에서 사라질 때), +) 특정 작업을 처리한 코드를 실행시키고 싶을 때 사용한다.

기본 형태는 이러하다

1) 콜백함수를 인자로 받는 형태, 렌더링 될 때마다 실행
useEffect(() => {
 // 처리할 작업
});

2) 콜백함수와 의존성 배열을 인자로 받는 형태, 화면에 첫 렌더링 될 때 + value값이 바뀔 때 실행
useEffect(() => {
 // 처리할 작업
}, [value]);

(두 번째 인자로 [] 빈 배열을 받을 땐 화면에 첫 렌더링 될 때만 렌더링이 실행된다.)

* cleanup 기능
useEffect에서 어떤 작업을 처리했다면 이 작업이 더이상 필요하지 않을때 멈춰주는 정리 작업이 필요하다.
-> useEffect 의 return 값으로 처리한다.

useEffect(() => {
 // 처리할 작업
  return () => {
   // 처리 작업 정리
 }
}, []);

ex) setInterval -> clearInterval로 cleanup, 모달창 open -> close로 cleanup



